[General]
tkenv-plugin-path = ../../../etc/plugins
network = Net802154

# Mobility
**.host*.mobilityType = "StaticConcentricMobility"
**.numHosts = 19

# Network Layer
**.networkLayerType = "GenericNetworkLayer"
**.routingTableType = "GenericRoutingTable"
**.routingTable.addressType = "modulepath"
**.configurator.addStaticRoutes = true
**.leaveCommunicationTrail = true
**.dumpTopology = true
**.dumpRoutes = true

# Traffic generator for Network Setup
**.host[*].setupTrafficgen.numPackets = 0
**.host[*].setupTrafficgen.startTime = 0s
**.host[*].setupTrafficgen.sendInterval = exponential(200ms)
**.host[*].setupTrafficgen.packetLength = 80B
**.host[*].setupTrafficgen.destAddresses = "host[0](modulepath)"

# Traffic Generator
**.host[*].trafficgen.startTime = 0s
**.host[*].trafficgen.sendInterval = exponential(200ms)
**.host[0].trafficgen.numPackets = 0
**.host[*].trafficgen.numPackets = 500
**.host[*].trafficgen.packetLength = 80B
**.host[*].trafficgen.destAddresses = "host[0](modulepath)"



[Config GeographicCSMA19]
network = Net802154Geographic
# Mobility
**.numHosts = 19 

# MAC
**.host[*].wlan[*].mac.queueLength = 50000
**.mac.macMaxFrameRetries = 2
**.mac.macMaxCSMABackoffs = 2
**.mac.macMaxBE = 8

# Network Layer
**.configurator.addStaticRoutes = false
**.configurator.addStaticNeighbors = true
**.dumpTopology = false
**.leaveCommunicationTrail = false
**.networkLayerType = "GeographicNetworkLayer"
**.neighborTableType = "StraightestNeighborTable"


# Traffic Generator
# 90B payload + 19B GeographicDatagram (transport layer)
**.host[*].trafficgen.packetLength = 60B
**.host[*].trafficgen.startTime = 1s
**.host[0].trafficgen.numPackets = 0
**.host[*].trafficgen.numPackets = 100
#**.host[*].trafficgen.numPackets = -1
**.host[*].trafficgen.sendInterval = exponential(${sendInt=0.1,0.2,0.3,0.4,0.5}s)

# Statistics
#**.host[*].wlan[*].radio.bitErrorRate.result-recording-modes = -histogram -vector
#**.host[0].endToEndDelay.vector-recording = true
#record-eventlog = true

repeat = 1


[Config GeographicCSMA]
network = Net802154Geographic
description = "Static concentric Network, where all nodes send to the center node using geographic routing and CSMA"
# Mobility
**.numHosts = 63 #346				#19		# 1 + numCircles * (numCircles+1) * PI}

# MAC
**.host[*].wlan[*].mac.queueLength = 50

# Network Layer
**.configurator.addStaticRoutes = false
**.configurator.addStaticNeighbors = true
**.dumpTopology = false
**.leaveCommunicationTrail = false
**.networkLayerType = "GeographicNetworkLayer"
**.neighborTableType = "StraightestNeighborTable"


# Traffic Generator
# 90B payload + 19B GeographicDatagram (transport layer)
**.host[*].trafficgen.packetLength = 109B
**.host[*].trafficgen.startTime = 1s
#**.host[3].trafficgen.numPackets = -1
#**.host[6].trafficgen.numPackets = -1
**.host[0].trafficgen.numPackets = 0
**.host[*].trafficgen.numPackets = 100
#**.host[*].trafficgen.numPackets = -1
**.host[*].trafficgen.sendInterval = exponential(${sendInt=1.3,1.5,1.7,1.9}s) #${sendInt=0.1,0.2,0.3,0.4,0.5}s)#

# Statistics
#**.host[*].wlan[*].radio.bitErrorRate.result-recording-modes = -histogram -vector
#**.host[0].endToEndDelay.vector-recording = true
#record-eventlog = true

repeat = 3



[Config GeographicDSME]
description = "Static concentric Network, where all nodes send to the center node using geographic routing and DSME"
extends = GeographicCSMA

#**.numHosts = 19

# Mobility
**.coordinatorEveryNthNode = 2		#3	=>	many many outer nodes dont hear any beacon

# Link Layer
**.macType = "DSME"
# MAC
# Number Superframes (Beaconslots): 2^(BO-SO)
# Number Superframes per Multisuperframe (number of GT periods): 2^(MO-SO)
**.host[*].wlan[*].mac.beaconOrder = 7
**.host[*].wlan[*].mac.superframeOrder = 3
**.host[*].wlan[*].mac.multiSuperframeOrder = 6

# -> 7*2^(MO-SO) = 56 GTS per multisuperframe
**.host[1].wlan[*].mac.maxNumberGTSAllocPerDevice = 	${maxGTS1= 9, 10, 10, 100}				# node 1 routes more traffic
**.host[4].wlan[*].mac.maxNumberGTSAllocPerDevice = 	${maxGTS4= 7, 8, 9, 100 ! maxGTS1}		# node 4 also more
**.host[2..3].wlan[*].mac.maxNumberGTSAllocPerDevice =	${maxGTS2= 6, 7, 8, 100 ! maxGTS1}		# then the other inner nodes
**.host[5..6].wlan[*].mac.maxNumberGTSAllocPerDevice =	${maxGTS5= 6, 7, 8, 100 ! maxGTS1}		# then the other inner nodes
**.host[*].wlan[*].mac.maxNumberGTSAllocPerDevice = 	${maxGTS7= 3, 4, 5, 100 ! maxGTS1}		#
**.host[*].wlan[*].mac.maxNumberGTSAllocPerRequest = 1
**.host[*].wlan[*].mac.maxGTSIdleCount = 25

**.host[*].wlan[*].mac.queueLength = 25 #000						# queueSize per destination

**.host[*].wlan[*].mac.saveGtsAllocationStatsAt = ${setupTime=90}s
**.host[*].wlan[*].mac.setupPhaseLength = ${setupTime}s				# flush the dsme queues


**.host[0].isPANCoordinator = true
# isCoordinator gets set by mobility


# Traffic generator for Network Setup (overload)
**.host[0].setupTrafficgen.numPackets = 0
**.host[*].setupTrafficgen.numPackets = -1
**.host[*].setupTrafficgen.sendInterval = exponential(${setupSendInt= 0.7, 0.7, 0.7, $sendInt ! maxGTS1}s)
**.host[*].setupTrafficgen.startTime = 5s
**.host[*].setupTrafficgen.stopTime = ${setupTime}s

# Traffic Generator
**.host[*].trafficgen.startTime = ${trafficStart=$setupTime}s + 0.01s	# after queues flushed


sim-time-limit = 370s

#record-eventlog = true
#eventlog-file = ${resultdir}/${configname}-${runnumber}.elog
#**.host[1].**.mac.module-eventlog-recording = true
#**.host[6].**.mac.module-eventlog-recording = true
#**.host[18].**.mac.module-eventlog-recording = true
#**.module-eventlog-recording = false

#num-rngs = 
#parallel-simulation =
repeat = 3 #1
 